package game

import (
	"bufio"
	"fmt"
	"math/rand"
	"os"
	"strconv"
	"strings"
	"time"
)

// –Ω–∞—á–∞–ª–æ –∏–≥—Ä—ã
func Game() {
	attempts := 10
	fmt.Println("–í—ã –Ω–∞—á–∞–ª–∏ –∏–≥—Ä—É \"–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ\"")
	fmt.Println("–£ –≤–∞—Å –≤—Å–µ–≥–æ", attempts, "–ø–æ–ø—ã—Ç–æ–∫")
	rand.Seed(time.Now().UnixNano())
	random := rand.Intn(100) + 1
	reader := bufio.NewReader(os.Stdin)
	for  {
		fmt.Print("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —á–∏—Å–ª–æ: ")
		input, _ := reader.ReadString('\n')
		input = strings.TrimSpace(input)
		s := strings.ReplaceAll(input, " ", "")
		guess, err := strconv.Atoi(s)
		if err != nil {
			fmt.Println("–í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ")
			continue
		}
		if random < guess {
			fmt.Println("–°–µ–∫—Ä–µ—Ç–Ω–æ–µ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µüëá")
			Tips(random, guess)
		} else if random > guess{
			fmt.Println("–°–µ–∫—Ä–µ—Ç–Ω–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µüëÜ")
			Tips(random, guess)
		} else {
			fmt.Println("–í—ã —É–≥–∞–¥–∞–ª–∏!üôå")
			return
		}
		attempts--
		if attempts > 0 {
			fmt.Println("–£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å", attempts, "–ø–æ–ø—ã—Ç–æ–∫")
		}
		if attempts == 0 {
			fmt.Println("–ü–æ–ø—ã—Ç–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å")
			fmt.Println("–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!üò¢")
			fmt.Println("–ê –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –±—ã–ª", random)
			return
		}
	}
}

// –ø–æ–¥—Å–∫–∞–∑–∫–∏
func Tips(random int, guess int) {
	diff := random - guess
	if diff < 0 {
		diff = -diff
	}
	if diff <= 5 {
		fmt.Println("–ì–æ—Ä—è—á–æ üî•")
	} else if diff <= 15 {
		fmt.Println("–¢–µ–ø–ª–æ  üôÇ")
	} else {
		fmt.Println("–•–æ–ª–æ–¥–Ω–æ ‚ùÑÔ∏è")
	}
}



